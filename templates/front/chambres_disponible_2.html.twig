{% extends 'front/base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Style pour l'overlay de chargement */
        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(255, 255, 255, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            flex-direction: column;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }

        /* Style pour les messages d'erreur */
        #error-message {
            display: none;
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #f8d7da;
            color: #721c24;
            padding: 12px 24px;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            max-width: 90%;
            text-align: center;
        }

        /* Style pour les chambres sélectionnées */
        .selected-rooms-list {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }

        .selected-rooms-list h3 {
            padding: 16px;
            margin: 0;
            background-color: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .selected-room {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px;
            border-bottom: 1px solid #e9ecef;
        }

        .selected-room:last-child {
            border-bottom: none;
        }

        .room-info h4 {
            margin: 0 0 4px 0;
            font-size: 1rem;
            font-weight: 600;
        }

        .price-details {
            color: #6c757d;
            font-size: 0.875rem;
        }

        .room-actions {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .room-price {
            font-weight: 600;
            color: #2c3e50;
        }

        .remove-btn {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
            padding: 4px 8px;
            border-radius: 4px;
            transition: background-color 0.2s;
        }

        .remove-btn:hover {
            background-color: #f8d7da;
        }

        .booking-summary {
            padding: 16px;
            background-color: #f8f9fa;
            border-top: 1px solid #e9ecef;
        }

        .booking-total {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .tax-info {
            text-align: right;
            color: #6c757d;
            font-size: 0.8rem;
            margin-bottom: 16px;
        }
        .cart-item-info {
            flex: 1;
        }
        .btn-book {
            width: 100%;
            padding: 12px;
            background-color: #2c3e50;
            color: white;
            border: none;
            border-radius: 4px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            transition: background-color 0.2s;
        }

        .btn-book:hover {
            background-color: #1a252f;
        }

        .empty-selection {
            text-align: center;
            padding: 32px 16px;
            color: #6c757d;
        }

        .empty-selection i {
            font-size: 2rem;
            margin-bottom: 8px;
            color: #dee2e6;
        }

        .empty-selection p {
            margin: 8px 0 4px;
            font-weight: 500;
        }

        .empty-selection small {
            font-size: 0.875rem;
        }

        /* Styles pour les cartes de chambres */
        .suite-card {
            background: #fff;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            margin-bottom: 24px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .suite-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
        }
        .suite-content {
            display: flex;
            gap: 20px;
            padding: 20px;
        }


        .suite-image {
            width: 200px;
            height: 150px;
            border-radius: 8px;
            object-fit: cover;
            flex-shrink: 0;
        }

        .suite-info {
            flex: 1;
        }

        .suite-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 0 0 12px 0;
        }

        .suite-details {
            display: flex;
            gap: 20px;
            margin-bottom: 12px;
            color: #6c757d;
            font-size: 0.9rem;
        }

        .suite-details span {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .suite-features {
            color: #495057;
            font-size: 0.9rem;
            margin: 12px 0;
            line-height: 1.5;
        }

        .suite-description {
            color: #6c757d;
            font-size: 0.95rem;
            line-height: 1.6;
            margin: 16px 0 0 0;
        }

        .suite-pricing {
            background: #f8f9fa;
            padding: 20px;
            border-top: 1px solid #e9ecef;
        }

        .pricing-option {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .pricing-details {
            flex: 1;
        }

        .pricing-title {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .pricing-features {
            display: flex;
            gap: 16px;
            margin-bottom: 12px;
        }

        .feature-check {
            display: flex;
            align-items: center;
            gap: 4px;
            color: #28a745;
            font-size: 0.85rem;
        }

        .pricing-info {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .pricing-price {
            text-align: right;
            margin-right: 24px;
        }

        .price-amount {
            font-size: 1.25rem;
            font-weight: 700;
            color: #2c3e50;
        }

        .price-details {
            font-size: 0.9rem;
            color: #6c757d;
            margin-top: 4px;
        }

        .select-btn {
            background: #2c3e50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
            white-space: nowrap;
        }

        .select-btn:hover {
            background: #1a252f;
        }

        .no-rooms {
            text-align: center;
            padding: 40px 20px;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .no-rooms i {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 16px;
        }

        .no-rooms h3 {
            color: #2c3e50;
            margin: 0 0 8px 0;
        }
        .cart-items {
            border-top: 1px solid #eee;
            padding-top: 20px;
        }
        .no-rooms p {
            color: #6c757d;
            margin: 0;
        }
        .cart-item-title {
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .cart-item-details {
            font-size: 13px;
            color: #666;
            margin-bottom: 5px;
        }

        .cart-item-price {
            font-weight: 700;
            color: #333;
        }


        /* Styles responsives */
        @media (max-width: 1024px) {
            .suite-content {
                flex-direction: column;
                gap: 20px;
            }

            .suite-image {
                width: 100%;
                height: 250px;
            }

            .pricing-option {
                flex-direction: column;
                gap: 20px;
                align-items: flex-start;
            }

            .pricing-price {
                margin: 10px 0;
                text-align: left;
                width: 100%;
            }

            .select-btn {
                width: 100%;
                padding: 12px;
            }
        }

        @media (max-width: 768px) {
            .suite-details {
                flex-wrap: wrap;
                gap: 10px;
            }

            .pricing-features {
                flex-direction: column;
                gap: 8px;
            }

            .suite-pricing {
                padding: 15px;
            }

            .suite-content {
                padding: 15px;
            }

            .suite-title {
                font-size: 1.3rem;
            }

            .price-amount {
                font-size: 1.1rem;
            }
        }

        @media (max-width: 480px) {
            .suite-image {
                height: 200px;
            }

            .suite-details span {
                font-size: 0.8rem;
            }

            .suite-features,
            .suite-description {
                font-size: 0.85rem;
            }

            .pricing-title {
                font-size: 1rem;
            }

            .feature-check {
                font-size: 0.8rem;
            }

            .price-amount {
                font-size: 1.2rem;
            }

            .price-details {
                font-size: 0.8rem;
            }
        }

        /* Amélioration des boutons de chambre */
        .room-button {
            transition: all 0.2s;
        }

        .room-button.selected {
            background-color: #28a745;
            color: white;
            border-color: #28a745;
        }

        .room-button.selected:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        .cart-sidebar {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .cart-total {
            font-size: 24px;
            font-weight: 700;
            color: #333;
            margin-bottom: 20px;
        }

        .cart-dates {
            font-size: 14px;
            color: #666;
            margin-bottom: 5px;
        }
        .cart-final-total {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 20px;
            font-weight: 700;
            color: #333;
        }

        .cart-tax-info {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .more-info-btn {
            background: none;
            border: none;
            color: #667eea;
            cursor: pointer;
            font-size: 14px;
            text-decoration: underline;
        }
    </style>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .hero-banner {
            height: 120px;

            background-size: cover;
            position: relative;
        }

        .search-bar {
            position: absolute;
            bottom: -30px;
            left: 50%;
            transform: translateX(-50%);
            background: white;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            padding: 20px;
            display: flex;
            gap: 20px;
            align-items: center;
            flex-wrap: wrap;
            min-width: 90%;
            max-width: 1200px;
        }

        .search-field {
            display: flex;
            flex-direction: column;
            gap: 5px;
            min-width: 200px;
            flex: 1;
        }

        .search-field label {
            font-size: 12px;
            color: #666;
            font-weight: 500;
        }

        .search-field input, .search-field select {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 12px;
            font-size: 14px;
            outline: none;
            transition: border-color 0.2s;
        }

        .search-field input:focus, .search-field select:focus {
            border-color: #667eea;
        }

        .promo-code {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #666;
            font-size: 14px;
            cursor: pointer;
            white-space: nowrap;
        }

        .container {
            /*max-width: 1200px;*/
            /*margin: 80px auto 0;*/
            /*padding: 0 20px;*/
            /*display: grid;*/
            /*grid-template-columns: 2fr 1fr;*/
            /*gap: 30px;*/
        }

        .suites-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .suite-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .suite-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 32px rgba(0,0,0,0.12);
        }

        .suite-content {
            display: flex;
            gap: 20px;
            padding: 20px;
        }

        .suite-image {
            width: 200px;
            height: 150px;
            border-radius: 8px;
            object-fit: cover;
            flex-shrink: 0;
        }

        .suite-info {
            flex: 1;
        }

        .suite-title {
            font-size: 20px;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
        }

        .suite-details {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 10px;
            font-size: 14px;
            color: #666;
        }

        .suite-details span {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .suite-features {
            color: #666;
            font-size: 13px;
            line-height: 1.4;
            margin-bottom: 15px;
        }

        .suite-description {
            color: #555;
            font-size: 14px;
            line-height: 1.5;
            margin-bottom: 15px;
        }

        .suite-pricing {
            background: #f8f9fa;
            padding: 20px;
            border-top: 1px solid #eee;
        }

        .pricing-option {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .pricing-details {
            flex: 1;
        }

        .pricing-title {
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .pricing-features {
            display: flex;
            gap: 15px;
            margin-bottom: 10px;
        }

        .feature-check {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
            color: #28a745;
        }

        .pricing-info {
            font-size: 12px;
            color: #666;
        }

        .pricing-price {
            text-align: right;
            margin-right: 20px;
        }

        .price-amount {
            font-size: 18px;
            font-weight: 700;
            color: #333;
        }

        .price-details {
            font-size: 12px;
            color: #666;
            margin-top: 2px;
        }

        .select-btn {
            background: #8b0000;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
            min-width: 80px;
        }

        .select-btn:hover {
            background: #a00000;
        }

        .cart-sidebar {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .cart-total {
            font-size: 24px;
            font-weight: 700;
            color: #333;
            margin-bottom: 20px;
        }

        .cart-dates {
            font-size: 14px;
            color: #666;
            margin-bottom: 5px;
        }

        .cart-guests {
            font-size: 14px;
            color: #666;
            margin-bottom: 25px;
        }

        .cart-items {
            border-top: 1px solid #eee;
            padding-top: 20px;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid #f0f0f0;
        }

        .cart-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .cart-item-info {
            flex: 1;
        }

        .cart-item-title {
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .cart-item-details {
            font-size: 13px;
            color: #666;
            margin-bottom: 5px;
        }

        .cart-item-price {
            font-weight: 700;
            color: #333;
        }

        .remove-btn {
            background: none;
            border: none;
            color: #999;
            cursor: pointer;
            padding: 5px;
            margin-left: 10px;
        }

        .remove-btn:hover {
            color: #666;
        }

        .cart-total-section {
            border-top: 2px solid #eee;
            padding-top: 20px;
            margin-top: 20px;
        }

        .cart-final-total {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 20px;
            font-weight: 700;
            color: #333;
        }

        .cart-tax-info {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .more-info-btn {
            background: none;
            border: none;
            color: #667eea;
            cursor: pointer;
            font-size: 14px;
            text-decoration: underline;
        }

    </style>
{% endblock %}

{% block body %}
    <!-- Overlay de chargement -->
    <div id="loading-overlay">
        <div class="spinner"></div>
        <p>Recherche des chambres disponibles...</p>
    </div>

    <!-- Message d'erreur -->
    <div id="error-message"></div>
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay">
        <div class="spinner"></div>
    </div>

    <!-- ... -->
    <!-- Error Message -->
    <div id="errorMessage" class="error-message"></div>

    <div class="banner-header section-padding valign bg-img bg-fixed" data-overlay-dark="3"
         data-background="{{ asset('assets/front/images/home2_slide1.jpeg') }}">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-left caption mt-90">
                    <h5>CHB</h5>
                    <h1>Chambres et suites</h1>
                </div>
            </div>
        </div>
    </div>
    <div class="hero-banner">
        <div class="search-bar">
            <div class="search-field">
                <div class="container">
                    <div class="row">
                        <div class="col-md-6">
                            <label>Sélectionner les dates</label>
                            <input type="date" id="check-in" value="2025-08-10">
                        </div>
                        <div class="col-md-6">
                            <span>→</span>
                            <input type="date" id="check-out" value="2025-08-12">
                        </div>
                    </div>
                </div>


            </div>
{#            <div class="search-field">#}
{#                <label>Sélectionner chambres et invités</label>#}
{#                <select id="rooms">#}
{#                    <option value="1">1 Chambre</option>#}
{#                    <option value="2" selected>2 Chambres</option>#}
{#                    <option value="3">3 Chambres</option>#}
{#                </select>#}
{#                <select id="guests">#}
{#                    <option value="2">2 Invités</option>#}
{#                    <option value="3">3 Invités</option>#}
{#                    <option value="4" selected>4 Invités</option>#}
{#                    <option value="5">5 Invités</option>#}
{#                    <option value="6">6 Invités</option>#}
{#                </select>#}
{#            </div>#}

        </div>
    </div>

    <div class="container mt-90">
        <div class="row">
            <div class="col-md-7">
                <div class="suites-list">
                    {% for chambre in availableRooms %}
                        <div class="suite-card" data-suite-id="{{ chambre.id }}">
                            <div class="suite-content">
                                <img src="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='200' height='150' viewBox='0 0 200 150'><rect fill='%23e3f2fd' width='200' height='150'/><rect fill='%232196f3' x='20' y='40' width='160' height='80' rx='5'/><rect fill='%23fff' x='30' y='50' width='40' height='20' rx='2'/><rect fill='%23fff' x='30' y='80' width='40' height='20' rx='2'/><circle fill='%23ffeb3b' cx='170' cy='25' r='15'/></svg>"
                                     alt="Suite Supérieure" class="suite-image">
                                <div class="suite-info">
                                    <h3 class="suite-title">{{ chambre.produit.libelle }}</h3>
                                    {#                            <div class="suite-details"> #}
                                    {#                                <span>👥 Peut accueillir 2</span> #}
                                    {#                                <span>🛏️ 1 Lit King</span> #}
                                    {#                                <span>🛁 1 Salle de bain</span> #}
                                    {#                            </div> #}
                                    {#                            <div class="suite-features"> #}
                                    {#                                26m² • Vue jardin • Non-fumeur • Détecteurs de fumée • Téléphone • Équipements salle de #}
                                    {#                                bain • Baignoire • Douche • Douche à l'italienne #}
                                    {#                            </div> #}
                                    <div class="suite-description">
                                        {{ chambre.produit.description | raw }}
                                    </div>
                                    <a href="{{ path('app_hebergement_details',{'id':chambre.id}) }}"
                                       class="more-info-btn">Plus d'infos</a>
                                </div>
                            </div>
                            <div class="suite-pricing">
                                <div class="pricing-option">
                                    <div class="pricing-details">
                                        <div class="pricing-title">Occupation Simple</div>
                                        {#                                <div class="pricing-features"> #}
                                        {#                                    <div class="feature-check">✓ Annulation gratuite !</div> #}
                                        {#                                    <div class="feature-check">✓ Réservez maintenant, payez plus tard</div> #}
                                        {#                                </div> #}
                                        <div class="pricing-info">Plus d'infos</div>
                                    </div>
                                    <div class="pricing-price">
                                        <div class="price-amount">{{ chambre.prix |number_format(0, ' ', ' ') }}XOF
                                        </div>
                                        <div class="price-details">Coût pour une nuit</div>
                                    </div>
                                    <button class="select-btn"
                                            onclick="selectSuite('{{ chambre.id }}', '{{ chambre.produit
                                            .libelle }}', {{ chambre.prix }})">
                                        Sélectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div class="col-md-5">
                <div class="cart-sidebar">
                    <div class="cart-total" id="cart-total"> 0.00 XOF total</div>
                    <div class="cart-dates" id="cart-dates">Dim, 10 Août 25 – Mar, 12 Août 25</div>
                    {#            <div class="cart-guests" id="cart-guests">2 chambres, 4 invités</div> #}
                    <div class="cart-dates" id="cart-nights">0 nuits</div>

                    <div class="cart-items" id="cart-items">
                        <!-- Les éléments du panier seront ajoutés ici dynamiquement -->
                    </div>

                    <div class="cart-total-section">
                        <div class="cart-final-total">
                            <span>Total</span>
                            <span id="final-total"> 0.00 XOF</span>
                        </div>
                        <div class="cart-tax-info">Taxes et frais inclus</div>
                    </div>
                </div>
            </div>
        </div>
    </div>


{% endblock %}
{% block javascripts %}
    <script>
        // Variables globales
        let selectedSuites = [];
        let currentNights = 0;
        let isLoading = false;

        // Constantes
        const API_BASE_URL = '{{ path('api_reservation_search_rooms') }}';

        /**
         * Initialise l'application au chargement du DOM
         */
        document.addEventListener ('DOMContentLoaded', function () {
            const dateArrive = document.getElementById ('check-in');
            const dateDepart = document.getElementById ('check-out');

            // Initialisation des écouteurs d'événements
            setupEventListeners (dateArrive, dateDepart);

            // Si des dates sont déjà sélectionnées, on lance une recherche
            if (dateArrive.value && dateDepart.value) {
                searchAvailableRooms (dateArrive.value, dateDepart.value);
            }
        });

        /**
         * Configure les écouteurs d'événements pour les champs de date
         */
        function setupEventListeners(dateArrive, dateDepart) {
            // Met à jour la date de départ minimale lors du changement de date d'arrivée
            dateArrive.addEventListener ('change', function () {
                updateMinDepartureDate (dateArrive, dateDepart);
                triggerRoomSearch (dateArrive, dateDepart);
            });

            // Empêche de sélectionner une date de départ antérieure à la date d'arrivée
            dateDepart.addEventListener ('change', function () {
                validateDepartureDate (dateArrive, dateDepart);
                triggerRoomSearch (dateArrive, dateDepart);
            });

            // Gestion du clic sur le bouton de recherche
            const searchButton = document.querySelector ('.search-button');
            if (searchButton) {
                searchButton.addEventListener ('click', function (e) {
                    e.preventDefault ();
                    triggerRoomSearch (dateArrive, dateDepart);
                });
            }
        }

        /**
         * Met à jour la date de départ minimale en fonction de la date d'arrivée
         */
        function updateMinDepartureDate(dateArrive, dateDepart) {
            if (!dateArrive.value) return;

            const arrivalDate = new Date (dateArrive.value);
            const nextDay = new Date (arrivalDate);
            nextDay.setDate (arrivalDate.getDate () + 1);

            // Formatage en YYYY-MM-DD
            const minDepartureDate = nextDay.toISOString ().split ('T')[0];
            dateDepart.min = minDepartureDate;

            // Si la date de départ actuelle est avant le nouveau minimum, on la met à jour
            if (new Date (dateDepart.value) < nextDay) {
                dateDepart.value = minDepartureDate;
            }
        }

        /**
         * Valide que la date de départ est postérieure à la date d'arrivée
         */
        function validateDepartureDate(dateArrive, dateDepart) {
            if (!dateArrive.value || !dateDepart.value) return;

            const arrivalDate = new Date (dateArrive.value);
            const departureDate = new Date (dateDepart.value);

            if (departureDate <= arrivalDate) {
                const nextDay = new Date (arrivalDate);
                nextDay.setDate (arrivalDate.getDate () + 1);
                dateDepart.value = nextDay.toISOString ().split ('T')[0];
            }
        }

        /**
         * Déclenche la recherche de chambres disponibles
         */
        function triggerRoomSearch(dateArrive, dateDepart) {
            if (!dateArrive.value || !dateDepart.value || isLoading) {
                return;
            }

            // Vérification des dates
            const arrivalDate = new Date (dateArrive.value);
            const departureDate = new Date (dateDepart.value);

            if (departureDate <= arrivalDate) {
                showError ('La date de départ doit être postérieure à la date d\'arrivée.');
                return;
            }

            // Calcul du nombre de nuits
            const newNights = Math.ceil ((departureDate - arrivalDate) / (1000 * 60 * 60 * 24));

            // Mettre à jour le nombre de nuits et les totaux si nécessaire
            if (newNights !== currentNights) {
                currentNights = newNights;
                // Mise à jour de l'affichage du nombre de nuits et des totaux
                updateNightsDisplay (currentNights);

                // Si des chambres sont déjà sélectionnées, on met à jour leurs prix
                if (selectedSuites.length > 0) {
                    updateSelectedRoomsPrices ();
                }
            }

            // Lancement de la recherche
            searchAvailableRooms (dateArrive.value, dateDepart.value);
        }

        /**
         * Effectue une recherche de chambres disponibles via AJAX
         */
        async function searchAvailableRooms(checkIn, checkOut) {
            if (isLoading) return;

            // Afficher l'indicateur de chargement
            showLoading (true);
            hideError ();
            isLoading = true;

            try {
                // Construction de l'URL avec les paramètres de requête
                const url = new URL (API_BASE_URL, window.location.origin);
                url.searchParams.append ('dateArrive', checkIn);
                url.searchParams.append ('dateDepart', checkOut);

                // Appel AJAX avec timeout
                const controller = new AbortController ();
                const timeoutId = setTimeout (() => controller.abort (), 30000); // Timeout après 30 secondes

                const response = await fetch (url, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Cache-Control': 'no-cache, no-store, must-revalidate',
                        'Pragma': 'no-cache',
                        'Expires': '0'
                    },
                    signal: controller.signal
                }).finally (() => clearTimeout (timeoutId));

                if (!response.ok) {
                    throw new Error (`Erreur HTTP: ${response.status}`);
                }

                const data = await response.json ();

                if (data.success) {
                    // Mise à jour de l'interface utilisateur avec les résultats
                    updateRoomsList (data.rooms);
                    updateDateDisplay (new Date (checkIn), new Date (checkOut));
                    updateUrlParams (checkIn, checkOut);
                } else {
                    throw new Error (data.message || 'Erreur lors de la récupération des chambres');
                }
            } catch (error) {
                console.error ('Erreur lors de la recherche des chambres:', error);
                const errorMessage = error.name === 'AbortError'
                    ? 'La requête a pris trop de temps. Veuillez réessayer.'
                    : 'Une erreur est survenue lors de la recherche des chambres. Veuillez réessayer.';
                showError (errorMessage);
            } finally {
                // Désactiver l'indicateur de chargement dans tous les cas
                showLoading (false);
                isLoading = false;

                // Forcer la mise à jour du DOM
                const loadingOverlay = document.getElementById ('loadingOverlay');
                if (loadingOverlay) {
                    loadingOverlay.style.display = 'none';
                }
            }
        }

        /**
         * Met à jour le prix d'une chambre sélectionnée
         */
        function updateSelectedRoomPrice(roomId, newNights) {
            const room = selectedSuites.find (suite => suite.id === roomId);
            if (room) {
                room.nights = newNights;
                room.totalPrice = room.pricePerNight * newNights;
                return true;
            }
            return false;
        }

        /**
         * Gère la sélection/désélection d'une chambre
         */
        function selectSuite(roomId, roomName, pricePerNight) {
            if (currentNights === 0) {
                showError ('Veuillez d\'abord sélectionner des dates valides.');
                return;
            }

            const price = parseFloat (pricePerNight);
            const existingIndex = selectedSuites.findIndex (suite => suite.id === roomId);

            if (existingIndex !== -1) {
                // Mettre à jour la chambre existante avec le nouveau nombre de nuits
                const updated = updateSelectedRoomPrice (roomId, currentNights);
                if (!updated) {
                    // Si la mise à jour échoue, retirer la chambre
                    selectedSuites.splice (existingIndex, 1);
                    updateRoomButton (roomId, false);
                }
            } else {
                // Ajouter une nouvelle chambre à la sélection
                selectedSuites.push ({
                    id: roomId,
                    name: roomName,
                    pricePerNight: price,
                    totalPrice: price * currentNights,
                    nights: currentNights,
                    addedAt: new Date ().getTime ()
                });
                updateRoomButton (roomId, true);
            }

            // Mettre à jour l'affichage
            updateSelectedRoomsList ();

            // Forcer la mise à jour de l'interface
            const event = new CustomEvent ('selectionUpdated', {detail: {roomId, selected: existingIndex === -1}});
            document.dispatchEvent (event);
        }

        // Function to remove a room from selection
        function removeSuite(roomId) {
            const index = selectedSuites.findIndex (suite => suite.id === roomId);
            if (index !== -1) {
                selectedSuites.splice (index, 1);
                updateSelectedRoomsList ();
            }
        }

        /**
         * Met à jour la liste des chambres sélectionnées dans l'interface
         */
        function updateSelectedRoomsList() {
            const selectedRoomsContainer = document.getElementById ('selectedRooms');
            if (!selectedRoomsContainer) return;

            // Effacer le contenu actuel
            selectedRoomsContainer.innerHTML = '';

            if (selectedSuites.length === 0) {
                selectedRoomsContainer.innerHTML = `
                    <div class="empty-selection">
                        <i class="fas fa-hotel"></i>
                        <p>Aucune chambre sélectionnée</p>
                        <small>Sélectionnez une ou plusieurs chambres pour continuer</small>
                    </div>
                `;
                return;
            }

            // Nettoyer les chambres trop anciennes (plus de 24h)
            const now = new Date ().getTime ();
            const removedRooms = [];

            selectedSuites = selectedSuites.filter (suite => {
                const isRecent = (now - suite.addedAt) < (24 * 60 * 60 * 1000);
                if (!isRecent) {
                    removedRooms.push (suite.id);
                }
                return isRecent;
            });

            // Mettre à jour les boutons des chambres supprimées
            removedRooms.forEach (roomId => updateRoomButton (roomId, false));

            // Calculer le prix total
            const totalPrice = selectedSuites.reduce ((sum, suite) => sum + suite.totalPrice, 0);

            // Générer le HTML pour chaque chambre sélectionnée
            const roomsHtml = selectedSuites.map (suite => `
                <div class="selected-room" data-room-id="${suite.id}">
                    <div class="room-info">
                        <h4>${escapeHtml (suite.name)}</h4>
                        <div class="price-details">
                            ${suite.pricePerNight.toLocaleString ('fr-FR')} XOF x ${currentNights} nuit${currentNights > 1 ? 's' : ''}
                        </div>
                    </div>
                    <div class="room-actions">
                        <span class="room-price">${suite.totalPrice.toLocaleString ('fr-FR')} XOF</span>
                        <button type="button" class="remove-btn" onclick="removeSuite('${suite.id}')" aria-label="Retirer cette chambre">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            `).join ('');

            // Ajouter le prix total et le bouton de réservation
            const totalHtml = `
                <div class="booking-summary">
                    <div class="booking-total">
                        <span>Total pour ${currentNights} nuit${currentNights > 1 ? 's' : ''}</span>
                        <strong>${totalPrice.toLocaleString ('fr-FR')} XOF</strong>
                    </div>
                    <p class="tax-info">TVA et taxes incluses</p>
                    <button type="button" class="btn-book" onclick="proceedToCheckout()">
                        <i class="fas fa-credit-card"></i> Procéder au paiement
                    </button>
                </div>
            `;

            selectedRoomsContainer.innerHTML = `
                <div class="selected-rooms-list">
                    <h3>Votre sélection (${selectedSuites.length} chambre${selectedSuites.length > 1 ? 's' : ''})</h3>
                    <div class="rooms">${roomsHtml}</div>
                    ${totalHtml}
                </div>
            `;
        }

        /**
         * Redirige vers la page de paiement
         */
        function proceedToCheckout() {
            if (selectedSuites.length === 0) {
                showError ('Veuillez sélectionner au moins une chambre.');
                return;
            }

            // Vérifier que les dates sont valides
            const dateArrive = document.getElementById ('check-in').value;
            const dateDepart = document.getElementById ('check-out').value;

            if (!dateArrive || !dateDepart) {
                showError ('Veuillez sélectionner des dates de séjour valides.');
                return;
            }

            // Préparer les données pour l'étape suivante
            const bookingData = {
                rooms: selectedSuites,
                checkIn: dateArrive,
                checkOut: dateDepart,
                totalNights: currentNights,
                totalPrice: selectedSuites.reduce ((sum, suite) => sum + suite.totalPrice, 0),
                timestamp: new Date ().getTime ()
            };

            // Stocker dans le stockage de session
            try {
                sessionStorage.setItem ('bookingData', JSON.stringify (bookingData));
                // Rediriger vers la page de paiement
                {# window.location.href = '{{ path("app_checkout") }}'; #}
            } catch (e) {
                console.error ('Erreur lors de l\'enregistrement de la réservation:', e);
                showError ('Une erreur est survenue. Veuillez réessayer.');
            }
        }

        /**
         * Met à jour l'affichage du nombre de nuits et les totaux
         */
        function updateNightsDisplay(nights) {
            // Mettre à jour la variable globale
            currentNights = nights;

            // Mettre à jour l'affichage du nombre de nuits
            const nightsElement = document.getElementById ('nights-count');
            if (nightsElement) {
                nightsElement.textContent = nights;
            }

            // Mettre à jour les totaux des chambres sélectionnées
            updateSelectedRoomsPrices ();
        }

        /**
         * Met à jour les prix des chambres sélectionnées
         */
        function updateSelectedRoomsPrices() {
            if (selectedSuites.length === 0) return;

            // Mettre à jour les totaux pour chaque chambre
            selectedSuites.forEach (suite => {
                if (suite.nights !== currentNights) {
                    suite.nights = currentNights;
                    suite.totalPrice = Math.round (suite.pricePerNight * currentNights * 100) / 100; // Arrondi à 2 décimales
                }
            });

            // Mettre à jour l'affichage
            updateSelectedRoomsList ();

            // Mettre à jour les boutons de sélection
            selectedSuites.forEach (suite => {
                updateRoomButton (suite.id, true);
            });
        }

        /**
         * Met à jour la liste des chambres disponibles dans l'interface
         */
        function updateRoomsList(rooms) {
            const roomsContainer = document.querySelector ('.suites-list');
            if (!roomsContainer) return;

            if (!rooms || rooms.length === 0) {
                roomsContainer.innerHTML = `
                    <div class="no-rooms">
                        <i class="fas fa-search"></i>
                        <h3>Aucune chambre disponible pour ces dates</h3>
                        <p>Veuillez essayer d'autres dates ou nous contacter pour plus d'informations.</p>
                    </div>
                `;
                return;
            }

            // Générer le HTML pour chaque chambre disponible
            const roomsHtml = rooms.map (room => `
                <div class="suite-card" data-room-id="${room.id}">
                    <div class="suite-content">
                        <img src="${room.image || '/assets/front/images/placeholder-room.jpg'}"
                             alt="${escapeHtml (room.name)}"
                             class="suite-image">
                        <div class="suite-info">
                            <h3 class="suite-title">${escapeHtml (room.name)}</h3>
                            <div class="suite-details">

                            </div>
                            <p class="suite-features">${escapeHtml (room.features?.join (' • ') || '')}</p>
                            <p class="suite-description">${escapeHtml (room.description || '')}</p>
                        </div>
                    </div>
                    <div class="suite-pricing">
                        <div class="pricing-option">
                            <div class="pricing-details">
                                <div class="pricing-title">Tarif standard</div>
                                <div class="pricing-features">
                                    <span class="feature-check"><i class="fas fa-check"></i> Petit-déjeuner inclus</span>
<!--                                    <span class="feature-check"><i class="fas fa-check"></i> Annulation gratuite</span>-->
                                </div>
                                <div class="pricing-info">Prix pour ${currentNights} nuit${currentNights > 1 ? 's' : ''}</div>
                            </div>
                            <div class="pricing-price">
                                <div class="price-amount">${(room.price * currentNights).toLocaleString ('fr-FR')} XOF</div>
                                <div class="price-details">${room.price.toLocaleString ('fr-FR')} XOF / nuit</div>
                            </div>
                            <button type="button"
                                    class="select-btn room-button"
                                    data-room-id="${room.id}"
                                    onclick="selectSuite('${room.id}', '${escapeHtml (room.name).replace (/'/g, "\\'")}', ${room.price})">
                                Sélectionner
                            </button>
                        </div>
                    </div>
                </div>
            `).join ('');

            roomsContainer.innerHTML = roomsHtml;

            // Mettre à jour l'état des boutons pour les chambres déjà sélectionnées
            selectedSuites.forEach (suite => {
                updateRoomButton (suite.id, true);
            });
        }

        /**
         * Met à jour l'affichage des dates de séjour
         */
        function updateDateDisplay(checkIn, checkOut) {
            if (!checkIn || !checkOut) return;

            const options = {
                weekday: 'short',
                day: 'numeric',
                month: 'short',
                year: 'numeric'
            };

            const dateDisplay = document.getElementById ('cart-dates');
            if (dateDisplay) {
                dateDisplay.textContent =
                    `${checkIn.toLocaleDateString ('fr-FR', options)} - ${checkOut.toLocaleDateString ('fr-FR', options)}`;
            }
        }

        /**
         * Met à jour les paramètres de l'URL avec les dates sélectionnées
         */
        function updateUrlParams(checkIn, checkOut) {
            const url = new URL (window.location.href);
            url.searchParams.set ('dateArrive', checkIn);
            url.searchParams.set ('dateDepart', checkOut);

            // Mettre à jour l'URL sans recharger la page
            window.history.pushState ({}, '', url);
        }

        /**
         * Met à jour l'état d'un bouton de chambre
         */
        function updateRoomButton(roomId, isSelected) {
            const button = document.querySelector (`.room-button[data-room-id="${roomId}"]`);
            if (button) {
                if (isSelected) {
                    button.classList.add ('selected');
                    button.innerHTML = '<i class="fas fa-check"></i> Sélectionnée';
                } else {
                    button.classList.remove ('selected');
                    button.innerHTML = 'Sélectionner';
                }
            }
        }

        /**
         * Supprime une chambre de la sélection
         */
        function removeSuite(roomId) {
            const index = selectedSuites.findIndex (suite => suite.id === roomId);
            if (index !== -1) {
                selectedSuites.splice (index, 1);
                updateRoomButton (roomId, false);
                updateSelectedRoomsList ();
            }
        }

        /**
         * Affiche un message d'erreur
         */
        function showError(message) {
            const errorContainer = document.getElementById ('error-message');
            if (errorContainer) {
                errorContainer.textContent = message;
                errorContainer.style.display = 'block';

                // Masquer le message après 5 secondes
                setTimeout (() => {
                    errorContainer.style.display = 'none';
                }, 5000);
            }
        }

        /**
         * Masque le message d'erreur
         */
        function hideError() {
            const errorContainer = document.getElementById ('error-message');
            if (errorContainer) {
                errorContainer.style.display = 'none';
            }
        }

        /**
         * Affiche ou masque l'indicateur de chargement
         */
        function showLoading(show) {
            isLoading = show;
            const loadingOverlay = document.getElementById ('loading-overlay');
            if (loadingOverlay) {
                loadingOverlay.style.display = show ? 'flex' : 'none';
            }
        }

        /**
         * Échappe les caractères HTML pour éviter les failles XSS
         */
        function escapeHtml(unsafe) {
            return unsafe
                .replace (/&/g, '&amp;')
                .replace (/</g, '&lt;')
                .replace (/>/g, '&gt;')
                .replace (/"/g, '&quot;')
                .replace (/'/g, '&#039;');
        }

        function updateGuestDisplay() {
            const rooms = document.getElementById ('rooms').value;
            const guests = document.getElementById ('guests').value;
            document.getElementById ('cart-guests').textContent =
                `${rooms} chambres, ${guests} invités`;
        }

        function selectSuite(suiteId, suiteName, basePrice) {
            // Vérifier si la suite est déjà sélectionnée
            const existingIndex = selectedSuites.findIndex (suite => suite.id === suiteId);

            if (existingIndex !== -1) {
                // Suite déjà sélectionnée, la remplacer
                selectedSuites[existingIndex] = {
                    id: suiteId,
                    name: suiteName,
                    basePrice: basePrice,
                    totalPrice: (basePrice) * currentNights // basePrice est pour 2 nuits par défaut
                };
            } else {
                // Nouvelle suite
                selectedSuites.push ({
                    id: suiteId,
                    name: suiteName,
                    basePrice: basePrice,
                    totalPrice: (basePrice) * currentNights // basePrice est pour 2 nuits par défaut
                });
            }

            updateCartDisplay ();
        }

        function removeSuite(suiteId) {
            selectedSuites = selectedSuites.filter (suite => suite.id !== suiteId);
            updateCartDisplay ();
        }

        function recalculateSelectedSuites() {
            selectedSuites.forEach (suite => {
                suite.totalPrice = (suite.basePrice) * currentNights;
            });
            updateCartDisplay ();
        }

        function updateCartDisplay() {
            const cartItems = document.getElementById ('cart-items');
            const cartTotal = document.getElementById ('cart-total');
            const finalTotal = document.getElementById ('final-total');

            // Vider le panier
            cartItems.innerHTML = '';

            let total = 0;

            // Ajouter chaque suite sélectionnée
            selectedSuites.forEach (suite => {
                const cartItem = document.createElement ('div');
                cartItem.className = 'cart-item';
                cartItem.innerHTML = `
                    <div class="cart-item-info">
                        <div class="cart-item-title">${suite.name}</div>
                        <div class="cart-item-details">${currentNights} nuits</div>
<!--                        <div class="cart-item-details">Annulation gratuite !</div>-->
                        <div class="cart-item-price">${suite.totalPrice} XOF</div>
                    </div>
                    <button class="remove-btn" onclick="removeSuite('${suite.id}')">🗑️</button>
                `;
                cartItems.appendChild (cartItem);
                total += suite.totalPrice;
            });

            // Mettre à jour les totaux
            cartTotal.textContent = `${total}`;
            finalTotal.textContent = `${total}`;

            // Afficher message si panier vide
            if (selectedSuites.length === 0) {
                cartItems.innerHTML = '<div style="text-align: center; color: #999; padding: 20px;">Aucune suite sélectionnée</div>';
            }
        }
    </script>
{% endblock %}
